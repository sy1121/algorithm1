package jianzhioffer;
/**
 * 1到n整数中1出现的次数
 * @author sy
 *
 */
/*解题思路：解法二告诉我们 1~ N 中"1"的个数跟最高位有关，那我们换个角  
度思考，给定一个 N，我们分析 1~N 中的数在每一位上出现 1 的次数的和，看看  
每一位上"1"出现的个数的和由什么决定。  
1 位数的情况：在解法二中已经分析过，大于等于 1 的时候，有 1 个，小于 1 就  
没有。  
2 位数的情况：N=13,个位数出现的 1 的次数为 2，分别为 1 和 11，十位数出现 1  
                      的次数为 4，分别为 10,11,12,13，所以 f(N) = 2+4。N=23,个位数出现的 1 的  
                              次数为3，分别为1，11，21，十位数出现1的次数为10，分别为10~19，f(N)=3+10。  
                                      由此我们发现，个位数出现 1 的次数不仅和个位数有关，和十位数也有关，如果  
                                      个位数大于等于 1，则个位数出现 1 的次数为十位数的数字加 1；如果个位数为  
                                      0，个位数出现 1 的次数等于十位数数字。而十位数上出现 1 的次数也不仅和十  
                                      位数相关，也和个位数相关：如果十位数字等于 1，则十位数上出现 1 的次数为  
                                      个位数的数字加 1，假如十位数大于 1，则十位数上出现 1 的次数为 10。  
                                      3 位数的情况：  
                                      N=123，个位出现 1 的个数为 13:1,11,21，…，91,101,111,121。十位出现 1 的  
                                        个数为 20:10~19,110~119。百位出现 1 的个数为 24:100~123。  
                                        我们可以继续分析 4 位数，5 位数，推导出下面一般情况： 假设 N，我们要计算  
                                        百位上出现 1 的次数，将由三部分决定：百位上的数字，百位以上的数字，百位  
                                        一下的数字。  
                                        如果百位上的数字为 0，则百位上出现 1 的次数仅由更高位决定，比如 12013，  
                                        百位出现 1 的情况为 100~199,1100~1199,2100~2199，…，11100~11199，共 1200  
                                        个。等于更高位数字乘以当前位数，即 12 * 100。  
                                        如果百位上的数字大于 1，则百位上出现 1 的次数仅由更高位决定，比如 12213，  
                                        百位出现 1 的情况为 100~199,1100~1199,2100~2199，…，11100~11199，  
                                        12100~12199 共 1300 个。等于更高位数字加 1 乘以当前位数，即（12 + 1）*100。  
                                        如果百位上的数字为 1，则百位上出现 1 的次数不仅受更高位影响，还受低位影  
                                        响。例如 12113，受高位影响出现 1 的情况：100~199,1100~1199,2100~2199，…，  
                                        11100~11199，共 1200 个，但它还受低位影响，出现 1 的情况是 12100~12113，  
                                        共 114 个，等于低位数字 113+1。  */
public class T32 {
     public int numberof1(int n){
    	 int i=1,count=0;
    	 int cur,before,after;
    	 while((n/i)>0){
    		cur=(n/i)%10;
    		before=n/(i*10);
    		after=n%i;
    		if(cur>1) count+=(before+1)*i;
    		else if(cur==0)  count+=before*i;
    		else if(cur==1) count+=before*i+after+1;
    	    i*=10;
    	 }
    	 return count;
     }
     public static void main(String[] args){
    	 T32 t=new T32();
    	 int r=t.numberof1(12345);
    	 System.out.println(r);
     }
}
